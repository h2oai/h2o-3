FROM ubuntu:18.04

RUN apt-get -y update && apt-get -y upgrade && \
    apt-get -y --no-install-recommends install \
        wget \
        curl \
        unzip \
        apt-utils \
        software-properties-common \
        net-tools \
        nginx \
        ca-certificates \
        build-essential

RUN \
  echo 'DPkg::Post-Invoke {"/bin/rm -f /var/cache/apt/archives/*.deb || true";};' | tee /etc/apt/apt.conf.d/no-cache && \
  echo "deb http://mirror.math.princeton.edu/pub/ubuntu xenial main universe" >> /etc/apt/sources.list && \
  apt-get update -q -y && \
  apt-get dist-upgrade -y && \
  apt-get clean && \
  rm -rf /var/cache/apt/* && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y wget unzip python-pip python-sklearn python-pandas python-numpy python-matplotlib software-properties-common python-software-properties

RUN apt-get install -y openjdk-8-jdk

RUN java -version

RUN apt-get -y install \
      python3-setuptools \
      python3-pip \
      python3-pandas \
      python3-numpy \
      python3-matplotlib \
      libxml2-dev \
      libssl-dev \
      libcurl4-openssl-dev \
      libgtk2.0-0 \
      iputils-ping

COPY h2o.jar /opt/program/h2o.jar
COPY dist/ /opt/h2o-dist

RUN /usr/bin/python3 -m pip install --upgrade pip
RUN /usr/bin/python3 -m pip install numpy scipy scikit-learn pandas flask gevent gunicorn requests tabulate colorama future
RUN /usr/bin/python3 -m pip install /opt/h2o-dist/*

# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard
# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE
# keeps Python from writing the .pyc files which are unnecessary in this case. We also update
# PATH so that the train and serve programs are found when the container is invoked.

ENV PYTHONUNBUFFERED=TRUE
ENV PYTHONDONTWRITEBYTECODE=TRUE
ENV PATH="/opt/program:${PATH}"

# Set up the program in the image
COPY gbm_scripts /opt/program
RUN chmod +x /opt/program/startup_h2o_cluster.sh
WORKDIR /opt/program

RUN ld -v
RUN ldd --version
