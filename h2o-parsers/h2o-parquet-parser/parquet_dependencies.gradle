def parquetHadoopVersion = binding.variables.get("hadoopVersion") ?
        binding.variables.get("hadoopVersion") : defaultHadoopVersion

configurations{
    // Configuration used to get all transitive dependencies for org.apache.hadoop:hadoop-common
    hadoopCommonExclude
}

dependencies {
    hadoopCommonExclude("org.apache.hadoop:hadoop-common:${parquetHadoopVersion}")

    api project(":h2o-core")
    api(project(":h2o-persist-hdfs")) {
        exclude group: 'ai.h2o', module: 'h2o-core'
        exclude group: 'net.java.dev.jets3t', module: 'jets3t'
        exclude group: 'org.apache.hadoop', module: 'hadoop-client'
        exclude group: 'org.apache.hadoop', module: 'hadoop-aws'
    }

    // Parquet support
    api("org.apache.parquet:parquet-hadoop:${defaultParquetVersion}")


    api("org.apache.hadoop:hadoop-common:${parquetHadoopVersion}") {
        // we can't use transitive=false so we need to exclude the dependencies manually
        configurations.hadoopCommonExclude.getResolvedConfiguration().getResolvedArtifacts().each {
            if (it.moduleVersion.id.group != "org.apache.hadoop" && it.moduleVersion.id.module.name != "hadoop-common") {
                exclude group: it.moduleVersion.id.group, module: it.moduleVersion.id.module.name
            }
        }
    }
    implementation("org.apache.hadoop:hadoop-mapreduce-client-core:${parquetHadoopVersion}") {
        transitive = false
    }
}
