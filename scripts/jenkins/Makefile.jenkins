.NOTPARALLEL: all
SHELL:=/bin/bash
THIS_FILE := $(lastword $(MAKEFILE_LIST))
JENKINS_MAKEFILE_PATH := scripts/jenkins/Makefile.jenkins

build-h2o-3:
	@echo "+--Building H2O-3--+"
	@echo
	./gradlew --parallel clean build -x test $$ADDITIONAL_GRADLE_OPTS
	@echo "+--Git Diff Check--+"
	if [[ $$(git diff 2>&1) ]]; then \
		echo "Non-zero git diff or git error after running gradlew build: In general, gradlew clean build should not generate any additional files. If you made changes in the API, run gradlew build on your local, and be sure, you commit all the generated Python, R,.. files together with your API change."; \
		git diff; \
		exit 1; \
	fi

warmup-caches:
	./gradlew build compileTestJava -x test -x h2o-r:build $$ADDITIONAL_GRADLE_OPTS

test-build-h2o-public:
	BUILD_HADOOP="true" ./gradlew --gradle-user-home $$HOME/.gradle_public clean build -x test -PforcePublic=true -PlocalNexusLocation=NO_NEXUS $$ADDITIONAL_GRADLE_OPTS

compress-huge-logfiles:
	find * -type f -name 'java*.out.txt' -exec gzip {} \;

check-pull-request:
	./gradlew checkPullRequest

test-package-py:
	zip -q -r test-package-py.zip \
	    h2o-py/tests/ h2o-py/demos/ \
	    tests/leakCheckKeywords \
	    h2o-docs/src/booklets/v2_2015/source h2o-py/build/dist/*.whl \
	    h2o-genmodel/build/libs/h2o-genmodel.jar h2o-assemblies/genmodel/build/libs/genmodel.jar \
	    scripts/run.py scripts/jenkins/hadoop/ \
	    $(JENKINS_MAKEFILE_PATH) tests/pyunit*List h2o-py/scripts/h2o-py-test-setup.py

test-package-r:
	zip -q -r test-package-r.zip h2o-r h2o-docs/src/booklets/v2_2015/source \
		tests/leakCheckKeywords \
		h2o-assemblies/genmodel/build/libs/genmodel.jar \
		scripts/run.py scripts/jenkins/hadoop/ \
		$(JENKINS_MAKEFILE_PATH) tests/runitSmokeTestList tests/runitAutoMLList \
		scripts/validate_r_cmd_check_output.R scripts/validate_r_cmd_check_output.py \
		h2o-3-DESCRIPTION

init-lookup:
	rm -f h2o-{r,py}/tests/.lookup.txt

lookup-automl-tests: init-lookup
	mkdir -p h2o-{r,py}/tests
	find h2o-r/tests -name '*automl*.R' -exec basename {} \; >>h2o-r/tests/.lookup.txt
	find h2o-py/tests -name '*automl*.py' -exec basename {} \; >>h2o-py/tests/.lookup.txt
	
lookup-automl-smoke-tests: init-lookup
	mkdir -p h2o-{r,py}/tests
	find h2o-r/tests -name '*SMOKE_automl*.R' -exec basename {} \; >>h2o-r/tests/.lookup.txt
	find h2o-py/tests -name '*SMOKE_automl*.py' -exec basename {} \; >>h2o-py/tests/.lookup.txt

lookup-fault-tolerance-tests:
	mkdir -p h2o-{r,py}/tests
	find h2o-r/tests -name '*fault_tolerance*.R' -exec basename {} \; >>h2o-r/tests/.lookup.txt
	find h2o-py/tests -name '*fault_tolerance*.py' -exec basename {} \; >>h2o-py/tests/.lookup.txt

lookup-demos-tests: init-lookup
	mkdir -p h2o-{r,py}/tests/testdir_demos
	find h2o-r/tests/testdir_demos -name '*.R' -exec basename {} \; >>h2o-r/tests/.lookup.txt
	find h2o-py/tests/testdir_demos -name '*.py' -exec basename {} \; >>h2o-py/tests/.lookup.txt

test-py-smoke:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testlist ../../tests/pyunitSmokeTestList --numclouds 6 --jvm.xmx 3g

test-py-smoke-minimal:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testlist ../../tests/pyunitSmokeTestList --numclouds 6 --jvm.xmx 3g --h2ojar ../../h2o-assemblies/minimal/build/libs/minimal.jar 

test-py-init:
	export NO_GCE_CHECK=True && cd h2o-py/tests/testdir_apis/H2O_Init \
	 && python h2o.init_test.py \
	 && python h2o.init_test_HOQE-16.py

test-py-booklets:
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --wipeall --norun
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --baseport 52524 --jvm.xmx 5g --test pybooklet.deeplearning.vignette.py
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --baseport 52524 --jvm.xmx 5g --test pybooklet.gbm.vignette.py
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --baseport 53534 --jvm.xmx 5g --test pybooklet.glm.vignette.py

test-py-demos:
	export NO_GCE_CHECK=True && export MPLBACKEND=Agg && cd h2o-py/demos/ && ../../scripts/run.py --wipeall --numclouds 4 --baseport 56789 --jvm.xmx 10g

test-pyunit-demos:
	cd h2o-py/tests/testdir_demos && python ../../../scripts/run.py --whl ../../../h2o-py/build/dist/h2o-*.whl --wipeall --numclouds 1 --jvm.xmx 5g

test-pyunit-small: lookup-automl-tests lookup-fault-tolerance-tests
	export NO_GCE_CHECK=True && export MPLBACKEND=Agg && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --numclouds 6 --jvm.xmx 4g --excludelist .lookup.txt

test-pyunit-single-node:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --numclouds 1 --numnodes 1 --jvm.xmx 4g --testlist ../../tests/pyunitSingleNodeList

test-pyunit-xgboost-stress:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --numclouds 1 --numnodes 5 --jvm.xmx 4g --testlist ../../tests/pyunitXGBoostStressTestList

test-pyunit-automl: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --numclouds 2 --jvm.xmx 4g --testlist .lookup.txt

test-pyunit-automl-smoke-noxgb: lookup-automl-smoke-tests
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --numclouds 1 --jvm.xmx 4g --jvm.opts '-Dsys.ai.h2o.ext.core.toggle.XGBoost=false' --testlist .lookup.txt

test-pyunit-fault-tolerance: init-lookup lookup-fault-tolerance-tests
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --numclouds 1 --numnodes 3 --jvm.xmx 4g --testlist .lookup.txt

test-pyunit-medium-large:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize ml --numclouds 1 --numnodes 5 --jvm.xmx 15g

test-py-single-test:
	@echo "test=$$SINGLE_TEST_PATH"
	@echo "numnodes=$$SINGLE_TEST_NUM_NODES"
	@echo "jvm.xmx=$$SINGLE_TEST_XMX"
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --test $$SINGLE_TEST_PATH --numnodes $$SINGLE_TEST_NUM_NODES --jvm.xmx $$SINGLE_TEST_XMX

test-r-smoke:
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --testlist ../../tests/runitSmokeTestList --numclouds 8 --jvm.xmx 3g

test-r-init:
	cd h2o-r/tests/testdir_jira && ADDITIONAL_TEST_JVM_OPTS="-Dsys.ai.h2o.debug.allowJavaVersions=7" R -f h2o.init_test_HOQE-16.R

test-r-small: lookup-automl-tests lookup-demos-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --geterrs --numclouds 4 --jvm.xmx 4g --excludelist .lookup.txt

test-r-small-client-mode: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --client --testsize s --numclouds 4 --jvm.xmx 4g --excludelist .lookup.txt

test-r-small-client-mode-attack: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --client --testsize s --numclouds 4 --jvm.opts '-Dsys.ai.h2o.debug.clientDisconnectAttack=true' --jvm.xmx 4g --excludelist .lookup.txt

test-r-automl: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --numclouds 4 --jvm.xmx 4g --testlist .lookup.txt

test-r-automl-smoke-noxgb: lookup-automl-smoke-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --numclouds 1 --jvm.xmx 4g --jvm.opts '-Dsys.ai.h2o.ext.core.toggle.XGBoost=false' --testlist .lookup.txt

test-r-client-mode-automl: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --client --numclouds 4 --jvm.xmx 4g --testlist .lookup.txt

test-r-medium-large:
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize ml --numclouds 2 --numnodes 2 --jvm.xmx 20g

test-r-datatable:
	export NO_GCE_CHECK=True && cd h2o-r/tests/testdir_perf && ../../../scripts/run.py --wipeall --test runit_repeating_merge.R  --numclouds 1 --numnodes 2 --jvm.xmx 20g

test-r-cmd-check:
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE R CMD check --run-dontrun --run-donttest h2o_*.*.*.*.tar.gz
	fuser -k 59999/tcp || /bin/true

test-r-cmd-check-as-cran:
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE R CMD check --as-cran h2o_*.*.*.*.tar.gz
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE [ -f ../../../../scripts/validate_r_cmd_check_output.R ] && Rscript ../../../../scripts/validate_r_cmd_check_output.R
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE python ../../../../scripts/validate_r_cmd_check_output.py || true
	fuser -k 59999/tcp || /bin/true

test-r-booklets:
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --wipeall --norun
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.deeplearning.vignette.R
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.gbm.vignette.R
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.glm.vignette.R
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.r.vignette.R

test-r-demos-small:
	cd h2o-r/demos && ../../scripts/run.py --wipeall --norun
	cd h2o-r/demos && ../../scripts/run.py --wipeall --testsize s --numclouds 4 --jvm.xmx 2g
	export NO_GCE_CHECK=True && cd h2o-r/h2o-package/demo && ../../../scripts/run.py --wipeall --norun
	export NO_GCE_CHECK=True && cd h2o-r/h2o-package/demo && ../../../scripts/run.py --wipeall --testsize s --numclouds 4 --jvm.xmx 2g

test-r-demos-medium-large:
	export NO_GCE_CHECK=True && cd h2o-r/demos && ../../scripts/run.py --wipeall --norun
	export NO_GCE_CHECK=True && cd h2o-r/demos && ../../scripts/run.py --wipeall --testsize ml --numclouds 1 --numnodes 3 --jvm.xmx 15g

test-r-single-test:
	@echo "test=$$SINGLE_TEST_PATH"
	@echo "numnodes=$$SINGLE_TEST_NUM_NODES"
	@echo "jvm.xmx=$$SINGLE_TEST_XMX"
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --test $$SINGLE_TEST_PATH --numnodes $$SINGLE_TEST_NUM_NODES --jvm.xmx $$SINGLE_TEST_XMX

r-generate-docs-jenkins:
	@$(MAKE) -f $(THIS_FILE) r-generate-docs
	@$(MAKE) -f $(THIS_FILE) pack-r-generated-docs

#######################################
### TARGET USED BY RELEASE PIPELINE ###
#######################################
r-generate-docs:
	cd h2o-r/h2o-package && R -e 'pkgdown::build_site(examples=FALSE)'

pack-r-generated-docs:
	zip r-generated-docs.zip h2o-r/h2o-package/docs/**/*.html

test-package-js:
	zip -q -r test-package-js \
		tests/leakCheckKeywords \
		$(JENKINS_MAKEFILE_PATH) tests/ignoreFlowSmokeTestList scripts/run.py \
		h2o-web

test-flow-headless-smoke:
	./scripts/run.py --wipeall --geterrs --test h2o-web/lib/h2o-flow/build/js/headless-test.js --jvm.xmx 4g --pto 14400 --ptt test-small --excludelist tests/ignoreFlowSmokeTestList

test-flow-headless-small:
	./scripts/run.py --wipeall --geterrs --test h2o-web/lib/h2o-flow/build/js/headless-test.js --jvm.xmx 4g --pto 14400 --ptt test-small

test-flow-headless-medium:
	./scripts/run.py --wipeall --geterrs --test h2o-web/lib/h2o-flow/build/js/headless-test.js --jvm.xmx 20g --pto 14400 --ptt test-medium

test-flow-headless:
	cd h2o-web && ../scripts/run.py --wipeall --geterrs --test lib/h2o-flow/build/js/headless-test.js --jvm.xmx 4g

test-info:
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --test testdir_algos/deeplearning/runit_deeplearning_iris_basic.R --jvm.xmx 4g
	cd h2o-r/tests/results && grep -v INFO java_0_0.out.txt > INFO_file.txt || true
	if [[ $$(wc -c h2o-r/tests/results/INFO_file.txt | awk '{print $$1}') -ne 0 ]]; then \
		echo "There were non-INFO lines in the output."; \
		cat h2o-r/tests/results/INFO_file.txt; \
		exit 1; \
	fi

test-package-gradle:
	zip -q -r test-package-java \
		tests/leakCheckKeywords \
		$(JENKINS_MAKEFILE_PATH) \
		gradlew \
		gradle.properties \
		gradle/ \
		buildSrc/ \
		multiNodeUtils.sh
	find . -name "*.gradle" | zip -q -r test-package-java \
	    -x h2o-web/* \
	    -x h2o-bindings/* \
	    -@

test-package-minimal:
	zip -q -r test-package-minimal \
	    h2o-assemblies/minimal/build/libs/minimal.jar \
		tests/leakCheckKeywords

test-package-java:
	zip -q -r test-package-java \
		tests/leakCheckKeywords \
		$(JENKINS_MAKEFILE_PATH) \
		gradlew \
		gradle.properties \
		gradle/ \
		buildSrc/ \
		multiNodeUtils.sh \
		h2o-app/ \
		h2o-core/src/ \
		h2o-core/build/resources/ \
		h2o-core/build/classes/java/ \
		h2o-core/build/libs/h2o-core-*.jar \
		h2o-genmodel/src/ \
		h2o-genmodel/build/libs/h2o-genmodel-*.jar \
		h2o-algos/src/ \
		h2o-algos/build/libs/h2o-algos-*.jar \
		h2o-automl/src/ \
		h2o-automl/build/libs/h2o-automl-*.jar \
		h2o-admissibleml/src/ \
		h2o-admissibleml/build/libs/h2o-admissibleml-*.jar \
		h2o-logger/src/ \
		h2o-logging/impl-log4j2/build/libs/h2o-logging-impl-log4j2-*.jar \
		h2o-logging/impl-log4j2/src/ \
		h2o-logging/impl-classic/build/libs/h2o-logging-impl-classic-*.jar \
		h2o-logging/impl-classic/src/ \
		h2o-logger/build/libs/h2o-logger-*.jar \
		h2o-parsers/h2o-avro-parser/src/ \
		h2o-parsers/h2o-avro-parser/build/libs/h2o-avro-parser-*.jar \
		h2o-parsers/h2o-orc-parser/src/ \
		h2o-parsers/h2o-orc-parser/build/libs/h2o-orc-parser-*.jar \
		h2o-parsers/h2o-parquet-parser/src/ \
		h2o-parsers/h2o-parquet-parser/build/libs/h2o-parquet-parser-*.jar \
		h2o-parsers/h2o-parquet-parser-tests/src/ \
		h2o-parsers/h2o-parquet-parser-tests/build/libs/h2o-parquet-parser-tests-*.jar \
		h2o-persist-gcs/src/ \
		h2o-persist-gcs/build/libs/h2o-persist-gcs-*.jar \
		h2o-persist-hdfs/src/ \
		h2o-persist-hdfs/build/libs/h2o-persist-hdfs-*.jar \
		h2o-persist-s3/src/ \
		h2o-persist-s3/build/libs/h2o-persist-s3-*.jar \
		h2o-security/src/ \
		h2o-security/build/libs/h2o-security-*.jar \
		h2o-extensions/xgboost/src/ \
		h2o-extensions/xgboost/build/libs/h2o-ext-xgboost*.jar \
		h2o-genmodel-extensions/xgboost/src/ \
		h2o-genmodel-extensions/xgboost/build/libs/h2o-genmodel-ext-xgboost*.jar \
		h2o-genmodel-extensions/jgrapht/src/ \
		h2o-genmodel-extensions/jgrapht/build/libs/h2o-genmodel-ext-jgrapht*.jar \
		h2o-jaas-pam/build/libs/h2o-jaas-pam-*.jar \
		h2o-webserver-iface/src/ \
		h2o-webserver-iface/build/libs/h2o-webserver-iface-*.jar \
		h2o-jetty-8/src/ \
		h2o-jetty-8/build/libs/h2o-jetty-8-*.jar \
		h2o-jetty-9/src/ \
		h2o-jetty-9/build/libs/h2o-jetty-9-*.jar \
		h2o-extensions/target-encoder/src/ \
		h2o-extensions/target-encoder/build/libs/h2o-ext-target-encoder*.jar \
		h2o-extensions/steam/src/ \
		h2o-extensions/steam/build/libs/h2o-ext-steam*.jar \
		h2o-test-support/src/ \
		h2o-test-support/build/libs/h2o-test-support-*.jar \
		h2o-k8s/src/ \
		h2o-k8s/build/libs/h2o-k8s-*.jar \
		h2o-k8s/tests/ \
		h2o-k8s/tests/clustering/assisted-clustering.py \
		h2o-helm/ \
		h2o-clustering/src/ \
		h2o-clustering/build/libs/h2o-clustering.jar \
		h2o-clustering/build/libs/h2o-clustering-*.jar \
		h2o-clustering/tests/ \
		scripts/run.py h2o-py/tests_rest_smoke scripts/test-xgb-gpu-smoke.sh \
		scripts/jenkins/hadoop/ \
		sort_crash.csv tests/doOnlyJunitSmokeTestList \
		jacoco/*.jar
	find . -name "*.gradle" | zip -q -r test-package-java \
	    -x h2o-web/* \
	    -x h2o-bindings/* \
	    -@
	find . -name "*test*.sh" | zip -q -r test-package-java -@
	find . -name "*test*.jar" | zip -q -r test-package-java -@

define sed_test_scripts
	find . -name 'test*Node.sh' -type f -exec sed -i 's/cat $$OUTDIR\/out*/echo "###### Printing last 400 lines of logs. Check artifacts for more. ######"; tail -n 400 $$OUTDIR\/out*/g' {} +
endef

test-junit-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit

test-junit:
	./gradlew test -x h2o-core:test -x h2o-ext-mojo-pipeline:test -x h2o-automl:test -x h2o-ext-xgboost:testMultiNode -x h2o-clustering:test $$ADDITIONAL_GRADLE_OPTS

test-junit-core-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-core

test-junit-core:
	./gradlew h2o-core:test $$ADDITIONAL_GRADLE_OPTS

test-junit-automl-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-automl

test-junit-automl:
	./gradlew h2o-automl:test $$ADDITIONAL_GRADLE_OPTS

test-junit-clustering-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-clustering

test-junit-clustering:
	./gradlew h2o-clustering:test $$ADDITIONAL_GRADLE_OPTS

test-junit-xgb-multi-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-xgb-multi

test-junit-xgb-multi:
	./gradlew h2o-ext-xgboost:testMultiNode $$ADDITIONAL_GRADLE_OPTS

test-junit-1x:
	./gradlew test -x h2o-ext-mojo-pipeline:test -x h2o-automl:test -x h2o-ext-xgboost:testMultiNode -x h2o-ext-target-encoder:testMultiNode -x h2o-clustering:test $$ADDITIONAL_GRADLE_OPTS

test-junit-1x-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-1x

test-junit-16-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-16

test-junit-16:
	ADDITIONAL_TEST_JVM_OPTS="-Dsys.ai.h2o.debug.allowJavaVersions=16 --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED" ./gradlew test -x h2o-ext-mojo-pipeline:test -x h2o-automl:test -x h2o-ext-xgboost:testMultiNode -x h2o-ext-target-encoder:testMultiNode -x h2o-clustering:test $$ADDITIONAL_GRADLE_OPTS

test-junit-17-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-17

test-junit-17:
	ADDITIONAL_TEST_JVM_OPTS="-Dsys.ai.h2o.debug.allowJavaVersions=17 --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED" ./gradlew test -x h2o-ext-mojo-pipeline:test -x h2o-automl:test -x h2o-ext-xgboost:testMultiNode -x h2o-ext-target-encoder:testMultiNode -x h2o-clustering:test $$ADDITIONAL_GRADLE_OPTS

test-junit-latest-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-latest

test-junit-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-smoke

test-junit-smoke:
	DOONLY=$$(head -n 1 tests/doOnlyJunitSmokeTestList) ./gradlew h2o-core:test h2o-algos:test $$ADDITIONAL_GRADLE_OPTS

test-junit-latest-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-latest-smoke

test-junit-16-smoke:
	ADDITIONAL_TEST_JVM_OPTS="-Dsys.ai.h2o.debug.allowJavaVersions=16 --add-opens=java.base/java.lang=ALL-UNNAMED" DOONLY=$$(head -n 1 tests/doOnlyJunitSmokeTestList) ./gradlew h2o-core:test h2o-algos:test $$ADDITIONAL_GRADLE_OPTS

test-junit-16-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-16-smoke

test-junit-17-smoke:
	ADDITIONAL_TEST_JVM_OPTS="-Dsys.ai.h2o.debug.allowJavaVersions=17 --add-opens=java.base/java.lang=ALL-UNNAMED" DOONLY=$$(head -n 1 tests/doOnlyJunitSmokeTestList) ./gradlew h2o-core:test h2o-algos:test $$ADDITIONAL_GRADLE_OPTS

test-junit-17-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-17-smoke

test-rest-smoke:
	cd h2o-py/tests_rest_smoke && ../../scripts/run.py --wipeall --geterrs --wipeall --numclouds 2 --jvm.xmx 2g

test-xgb-smoke-minimal-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-xgb-smoke-minimal

test-xgb-smoke-omp-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-xgb-smoke-omp

test-xgb-smoke-gpu-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-xgb-smoke-gpu

test-xgb-smoke-minimal:
	./gradlew h2o-ext-xgboost:test -x h2o-ext-xgboost:testMultiNode $$ADDITIONAL_GRADLE_OPTS
	$(call check_xgb_backend,'xgboost4j_minimal')

test-xgb-smoke-omp:
	./gradlew h2o-ext-xgboost:test -x h2o-ext-xgboost:testMultiNode $$ADDITIONAL_GRADLE_OPTS
	$(call check_xgb_backend,'xgboost4j_\(omp\|gpu\)')

test-xgb-smoke-gpu:
	scripts/test-xgb-gpu-smoke.sh
	$(call check_xgb_backend,'xgboost4j_gpu')

define check_xgb_backend
	@if [ ! "$$(egrep 'Found XGBoost backend with library: $(1)' h2o-extensions/xgboost/sandbox/single/*)" ]; then \
		echo "Cannot find XGBoost backend $(1) in the logs."; \
		echo "Please check logs in h2o-extensions/xgboost/sandbox/single"; \
		exit 1; \
	fi
endef

benchmark:
	Rscript ml-benchmark/h2oR/benchmark.R -d $$DATASETS_PATH -t $$TEST_CASES_PATH -o $$OUTPUT_PREFIX --git-sha $$GIT_SHA --git-date "$$GIT_DATE" --model $$BENCHMARK_MODEL --build-id $$BUILD_ID

test-package-hadoop:
	zip -q -r test-package-hadoop \
		tests/leakCheckKeywords \
		scripts/jenkins/config/ \
		h2o-hadoop-2/tests/python/ h2o-hadoop-2/h2o-*-assembly/build/libs/h2odriver.jar \
		h2o-hadoop-3/tests/python/ h2o-hadoop-3/h2o-*-assembly/build/libs/h2odriver.jar \
		h2o-hadoop-common/tests/python/ h2o-hadoop-common/tests/R/ \
		h2o-hive/tests/python/ h2o-hive/tests/R/

ifeq ($(HIVE_VERSION_MAJOR),3)
test-hadoop-common-smoke-hive-basic:
	echo "Hive version 3 installed, not running Hive tests."
test-hadoop-common-smoke-hive-spnego:
	echo "Hive version 3 installed, not running Hive tests."
else
test-hadoop-common-smoke-hive-basic:
	cd h2o-hive/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD
	cd h2o-hive/tests/R && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD
test-hadoop-common-smoke-hive-spnego:
	cd h2o-hive/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL
	cd h2o-hive/tests/R && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL
endif

test-hadoop-common-smoke-basic:
	cd h2o-hadoop-common/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD
	cd h2o-hadoop-common/tests/R && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD

test-hadoop-2-smoke-hdp: test-hadoop-2-smoke-standalone test-hadoop-common-smoke-hive-basic

test-hadoop-2-smoke-standalone: test-hadoop-common-smoke-basic
	cd h2o-hadoop-2/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD

test-hadoop-3-smoke-hdp: test-hadoop-3-smoke-standalone test-hadoop-common-smoke-hive-basic

test-hadoop-3-smoke-standalone: test-hadoop-common-smoke-basic
	cd h2o-hadoop-3/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD

test-kerberos-common-spnego:
	cd h2o-hadoop-common/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL

test-kerberos-hadoop-2-standalone: test-kerberos-common-spnego
	cd h2o-hadoop-2/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL

test-kerberos-hadoop-2-hdp: test-hadoop-2-smoke-standalone test-hadoop-common-smoke-hive-basic

test-kerberos-hadoop-2-spnego: test-kerberos-hadoop-2-standalone test-hadoop-common-smoke-hive-spnego

test-kerberos-hadoop-3-standalone: test-kerberos-common-spnego
	cd h2o-hadoop-3/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL

test-kerberos-hadoop-3-hdp: test-hadoop-3-smoke-standalone test-hadoop-common-smoke-hive-basic

test-kerberos-hadoop-3-spnego: test-kerberos-hadoop-3-standalone test-hadoop-common-smoke-hive-spnego

h2o_yarn_log: h2o_one_node
	cat h2o_one_node | grep job | sed 's/job/application/g' > h2o_yarn_id
	@if [ -z "`cat h2o_yarn_id`" ]; then\
		echo "YARN Application ID not found."; \
		exit 1; \
	fi
	@echo "YARN Application ID is `cat h2o_yarn_id`"
	-yarn application -kill `cat h2o_yarn_id`
	yarn logs -applicationId `cat h2o_yarn_id` > h2o_yarn_log

test-kerberos-verify-hive-token-refresh: h2o_yarn_log
	cat h2o_yarn_log | grep -e "TOKEN REFRESH: Updating credentials"

test-kerberos-verify-hdfs-token-refresh: h2o_yarn_log
	cat h2o_yarn_log | grep -e "HDFS TOKEN REFRESH: Updating credentials"

test-hadoop-multinode:
	cd h2o-hadoop-common/tests_multinode/python && ../../../scripts/run.py --wipeall --nointernal --usecloud "$$CLOUD_IP:$$CLOUD_PORT"
	cd h2o-hadoop-common/tests_multinode/R && ../../../scripts/run.py --wipeall --nointernal --usecloud "$$CLOUD_IP:$$CLOUD_PORT"

test-steam-websocket:
	cd h2o-extensions/steam/tests/python && mkdir -p results && python test.py

test-hadoop-fault-tolerance:
	cd h2o-hadoop-common/tests_fault_tolerance/python && python -m unittest test_*.py
	cd h2o-hadoop-common/tests_fault_tolerance/R && Rscript all-tests.R

test-h2o-k8s:
	bash h2o-k8s/tests/clustering/docker-init-script.sh

coverage-junit-algos-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) coverage-junit-algos

coverage-junit-algos:
	$(call sed_test_scripts)
	./gradlew h2o-algos:test $$ADDITIONAL_GRADLE_OPTS
	./gradlew jacocoMergeExecs $$ADDITIONAL_GRADLE_OPTS

test-mojo-compatibility:
ifeq ($(wildcard ../mojoland),)
	git clone https://github.com/h2oai/mojoland ../mojoland
endif
	cd ../mojoland && JAVA_HOME="$$JAVA_HOME_8" ./gradlew clean
	cd ../mojoland && JAVA_HOME="$$JAVA_HOME_8" ./gradlew build
	cd ../mojoland/mojo-py && H2O_JAVA_HOME="$$JAVA_HOME_8" python in_mojo_veritas.py

check-leaks:
	-grep -H -R --include "*.log" --include "*.out" --include "out.*" --exclude leak-check.out -E "`cat tests/leakCheckKeywords | tr '\n' '|' | sed 's/|\s*$$//'`" 2>&1 > leak-check.out
	@if [ -n "`cat leak-check.out`" ]; then\
		echo "Credentials leaked! Please check $(PWD)/leak-check.out"; \
		exit 1; \
	fi

h2o-k8s-docker-build:
	 cp LICENSE build/LICENSE
	 docker build --build-arg H2O_VERSION=$(DOCKER_IMAGE_TAG) -t $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_TAG) -f docker/public/Dockerfile-h2o-release build/
	 rm build/LICENSE

h2o-k8s-docker-push:
	docker login -u $(DOCKERHUB_USERNAME) -p $(DOCKERHUB_PASSWORD)
	docker push $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_TAG)
	
h2o-k8s-docker-push-redhat:
	echo ${H2O_RED_HAT_REGISTRY_KEY} | docker login -u unused scan.connect.redhat.com --password-stdin
	docker tag $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_TAG) scan.connect.redhat.com/$(H2O_RED_HAT_PID)/h2oai/h2o:$(DOCKER_IMAGE_TAG)
	docker push scan.connect.redhat.com/$(H2O_RED_HAT_PID)/h2oai/h2o:$(DOCKER_IMAGE_TAG)
	$(eval DIGEST := $(shell docker images --no-trunc --quiet scan.connect.redhat.com/$(H2O_RED_HAT_PID)/h2oai/h2o:$(DOCKER_IMAGE_TAG)))
	python scripts/jenkins/red_hat/red_hat_docker_certification.py --api_key $(H2O_RED_HAT_APIKEY) --pid $(H2O_RED_HAT_PID) --tag $(DOCKER_IMAGE_TAG) $(DIGEST)
	
h2o-k8s-docker-build-latest:
	cp LICENSE build/LICENSE
	docker build --build-arg H2O_VERSION=$(DOCKER_IMAGE_TAG) -t $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_TAG) -t $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_LATEST_TAG) -f docker/public/Dockerfile-h2o-release build/
	rm build/LICENSE

h2o-k8s-docker-push-latest: h2o-k8s-docker-push
	docker push $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_LATEST_TAG)

test-junit-rulefit:
	DOONLY="hex.rulefit.RuleFitTest#testBestPracticeExampleWithLinearVariablesWithoutScope,hex.rulefit.RuleFitTest#testBestPracticeExampleWithoutScope,hex.rulefit.RuleFitTest#testBestPracticeExample,hex.rulefit.RuleFitTest#testBestPracticeExampleWithLinearVariables,hex.rulefit.RuleFitTest#testCarsRules,hex.rulefit.RuleFitTest#testCarsRulesAndLinear,hex.rulefit.RuleFitTest#testCarsLongRules,hex.rulefit.RuleFitTest#testBostonHousing,hex.rulefit.RuleFitTest#testDiabetesWithWeights" ./gradlew h2o-algos:test $$ADDITIONAL_GRADLE_OPTS

test-junit-rulefit-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-rulefit
