apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java-library'

description = "H2O Application Assembly for Secure deployments using H2O Steam"

apply from: '../standalone_assembly.gradle'

configurations {
    api.exclude module: "h2o-jaas-pam"
}

// Dependencies
dependencies {
    api(project(":h2o-app")) {
        exclude module: "${defaultWebserverModule}"
    }
    runtimeOnly project(":h2o-jetty-9-minimal")
    api project(":h2o-logging-impl-log4j2")
    api project(":h2o-web")
    // Kubernetes support
    api project(":h2o-k8s-int")
    // Persist layer - exclude Hadoop wherever applicable
    api project(":h2o-persist-http")
    api project(":h2o-persist-gcs")
    api(project(":h2o-persist-s3")) {
        exclude group: "org.apache.hadoop"
    }
    api(project(":h2o-persist-hdfs"))
    api(project(":h2o-parquet-parser")) {
        exclude group: "org.apache.hadoop"
    }
    // Force latest version Hadoop with unused components excluded - we need Hadoop for Parquet and S3A export 
    api "org.apache.hadoop:hadoop-hdfs-client:${defaultHadoopVersion}"
    api("org.apache.hadoop:hadoop-common:${defaultHadoopVersion}") {
        exclude group: "com.sun.jersey"
        exclude group: "javax.servlet"
        exclude group: "org.apache.avro"
        exclude group: "org.apache.curator"
        exclude group: "org.apache.zookeeper"
        exclude group: "org.eclipse.jetty"
        exclude group: "org.apache.hadoop.thirdparty", module: "hadoop-shaded-protobuf_3_7"
    }
    // Upgrade dependencies coming from Hadoop to address vulnerabilities 
    api "org.apache.commons:commons-compress:1.24.0"
    // Force specific Parquet version to avoid dependency on vulnerable FasterXML jackson-mapper-asl
    api "org.apache.parquet:parquet-hadoop:${defaultParquetVersion}"
    api("org.apache.hadoop:hadoop-mapreduce-client-core:${defaultHadoopVersion}") {
        transitive = false
    }
    // Google OAuth force version
    api "com.google.oauth-client:google-oauth-client:1.33.3"

    constraints {
        api('com.fasterxml.jackson.core:jackson-databind:2.16.1') {
            because 'Fixes CVE-2022-42003'
            because 'Fixes PRISMA-2023-0067'
            because 'Fixes CVE-2023-35116'
        }
        api('org.codehaus.jettison:jettison:1.5.4') {
            because 'Fixes CVE-2023-1436'
            because 'Fixes CVE-2022-45693'
            because 'Fixes CVE-2022-45685'
            because 'Fixes CVE-2022-40150'
            because 'Fixes CVE-2022-40149'
        }
        api('org.jetbrains.kotlin:kotlin-stdlib:1.6.21') {
            because 'Fixes CVE-2020-29582'
            because 'Fixes CVE-2022-24329'
        }
        api('com.google.guava:guava:32.0.1-jre') {
            because 'Fixes CVE-2023-2976'
            because 'Fixes CVE-2020-8908'
            because 'Fixes CVE-2018-10237'
        }
        api('com.squareup.okio:okio:3.5.0') {
            because 'Fixes CVE-2023-3635'
        }
        api('org.xerial.snappy:snappy-java:1.1.10.5') {
            because 'Fixes CVE-2023-34455'
            because 'Fixes CVE-2023-34454'
            because 'Fixes CVE-2023-34453'
            because 'Fixes CVE-2023-43642'
        }
    }
}

shadowJar {
  mergeServiceFiles()
  classifier = ''
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.SF'
  exclude 'synchronize.properties'
  exclude 'uploader.properties'
  exclude 'test.properties'
  exclude 'cockpitlite.properties'
  exclude 'devpay_products.properties'
  manifest {
    attributes 'Main-Class': 'water.H2OApp'
    attributes 'Add-Opens': 'java.base/java.lang java.base/java.util java.base/java.lang.reflect'
    attributes 'Multi-Release': 'true'
  }
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.class) {
    file = file("${buildDir}/reports/license/dependency-license.xml")
    resource = "META-INF/license/h2o-depenencies-licenses.xml"
  }
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
  zip64 true
}
