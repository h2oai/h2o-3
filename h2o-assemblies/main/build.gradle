apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java-library'

description = "H2O Application Assembly"

apply from: '../standalone_assembly.gradle'

// Dependencies
dependencies {
    api project(":h2o-app")
    api project(":h2o-logging-impl-log4j2")
    runtimeOnly project(":${defaultExtWebserverModule}")
    api project(":h2o-web")
    api project(":h2o-avro-parser")
    api project(":h2o-persist-gcs")
    api project(":h2o-persist-s3")
    api project(":h2o-persist-http")
    api project(":h2o-persist-hdfs")
    api project(":h2o-ext-krbstandalone")
    if (project.hasProperty("doIncludeOrc") && project.doIncludeOrc == "true") {
        api project(":h2o-orc-parser")
    }
    api project(":h2o-parquet-parser")
    api project(":h2o-k8s-int")

    constraints {
        api('com.fasterxml.jackson.core:jackson-databind:2.13.4.2') {
            because 'Fixes CVE-2022-42003'
        }
        api('com.google.guava:guava:32.0.1-jre') {
            because 'Fixes CVE-2023-2976'
            because 'Fixes CVE-2020-8908'
            because 'Fixes CVE-2018-10237'
        }
    }
}

shadowJar {
  zip64 true
  mergeServiceFiles()
  classifier = ''
  // CDH 5.3.0 provides joda-time v1.6 which is too old, shadow the library instead
  if (!project.hasProperty("jacocoCoverage")) {
    relocate 'org.joda.time', 'ai.h2o.org.joda.time'
  }
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.SF'
  exclude 'synchronize.properties'
  exclude 'uploader.properties'
  exclude 'test.properties'
  exclude 'cockpitlite.properties'
  exclude 'devpay_products.properties'
  manifest {
    attributes 'Main-Class': 'water.H2OApp'
    attributes 'Add-Opens': 'java.base/java.lang java.base/java.util java.base/java.lang.reflect'
    attributes 'Multi-Release': 'true'
  }
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.class) {
    file = file("${buildDir}/reports/license/dependency-license.xml")
    resource = "META-INF/license/h2o-depenencies-licenses.xml"
  }
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}
