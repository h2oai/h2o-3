
description = "H2O Persist HDFS"

configurations {
    api.exclude module: 'servlet-api'
    testImplementation.exclude module: 'servlet-api'
}

dependencies {
    api project(":h2o-core")
    api("org.apache.hadoop:$defaultHdfsDependency:$defaultHadoopVersion") {
        // Pull all dependencies to allow run directly from IDE or command line
        transitive = true
    }
    api("org.apache.hadoop:hadoop-aws:$defaultHadoopVersion")
    api("com.nimbusds:nimbus-jose-jwt:9.11.3")

    testImplementation project(":h2o-test-support")
    testImplementation "com.amazonaws:aws-java-sdk-s3:${awsJavaSdkVersion}"
    testRuntimeOnly project(":${defaultWebserverModule}")
    testRuntimeOnly project(":h2o-persist-s3")
}

apply from: "${rootDir}/gradle/dataCheck.gradle"

task s3CredentialsCheck(group: "S3") {
    description = "Validates that core-site.xml file is present."
    doLast {
        def coreSitePath = System.getenv("JUNIT_CORE_SITE_PATH")
        if (! coreSitePath)
            throw new ResourceException('Environment property JUNIT_CORE_SITE_PATH is not defined.')
        if (! file(coreSitePath).isFile())
            throw new ResourceException("File ${coreSitePath} does not exist")
    }
}

test {
    dependsOn ":h2o-core:testJar"
    dependsOn smalldataCheck, s3CredentialsCheck, jar, testJar, testMultiNode

    // Defeat task 'test' by running no tests.
    exclude '**'
}
