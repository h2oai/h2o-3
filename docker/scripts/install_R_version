#!/bin/bash -ex

# Script for installing R from source
# To achieve an optimal build, add the necessary flags to ./configure in this script.
# See: https://stackoverflow.com/questions/8343686/how-to-install-2-different-r-versions-on-debian#comment10292265_8344873
#
# Resources:
#
# https://raw.githubusercontent.com/DominikMueller64/install_R_source/master/install_R_source.sh
# https://stackoverflow.com/questions/8343686/how-to-install-2-different-r-versions-on-debian
# https://stackoverflow.com/questions/24019503/installing-multiple-versions-of-r
# https://support.rstudio.com/hc/en-us/articles/215488098-Installing-multiple-versions-of-R
# http://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installation

R_VERSION=$1
R_VERSION_HOME="/usr/local/R/${R_VERSION}"

# Create temporary directory
mkdir -p $HOME/R_tmp
cd $HOME/R_tmp

# Download and extract R source
echo Downloading R source for ${R_VERSION}
R_MAJOR=$(echo $R_VERSION | head -c 1)
wget -q https://cran.r-project.org/src/base/R-${R_MAJOR}/R-${R_VERSION}.tar.gz
tar xzf R-${R_VERSION}.tar.gz
rm R-${R_VERSION}.tar.gz

# Configure and make
cd R-${R_VERSION}
./configure --prefix=${R_VERSION_HOME} --with-x=no
make
make install
chmod a+w -R ${R_VERSION_HOME}/lib/R/library

# Cleanup
cd ../..
rm -rf $HOME/R_tmp

# Create symbolic link
ln -s ${R_VERSION_HOME}/bin/R /usr/bin/R-${R_VERSION}
ln -s ${R_VERSION_HOME}/bin/Rscript /usr/bin/Rscript-${R_VERSION}
echo The R-${R_VERSION} executable is now available in /usr/bin/R-${R_VERSION}

# Create dirs for current R and make them writable
mkdir -p /usr/local/R/current/bin/
chmod a+w /usr/local/R/current/bin/

echo "Generate activate script"
# Create activation script
echo """#! /bin/bash

ln -s -f ${R_VERSION_HOME}/bin/R /usr/local/R/current/bin/R
ln -s -f ${R_VERSION_HOME}/bin/Rscript /usr/local/R/current/bin/Rscript""" > /usr/bin/activate_R_${R_VERSION}
chmod a+x /usr/bin/activate_R_${R_VERSION}

# Activate this R version
echo "Activating R ${R_VERSION}"
activate_R_${R_VERSION}

function checkRInstallLog() {
  log_file=$1
  if grep -E '(packages .* are not available)|(installation of package .* had non-zero exit status)' $log_file; then
    echo "Errors detected in R package installation."
    exit 1
  fi
}

# Install dependencies
echo "Installing dependencies for R ${R_VERSION}"
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); \
  install.packages(c( \
  'versions' \
  )) \
" 2>&1 | tee R.install.0.log
checkRInstallLog R.install.0.log
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); library(versions);\
  install.versions(c('usethis'), c('2.0.1'));
" 2>&1 | tee R.install.00.log
checkRInstallLog R.install.00.log
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); library(versions);\
  install.packages(c( \
  'devtools' \
  )) \
" 2>&1 | tee R.install.1.log
checkRInstallLog R.install.1.log
# Install dependency proxy for e1071 and dependency robustbase for fpc in version suited for R 3.3.3
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); library(devtools); \
  install_version('rgl', version = '0.100.54'); \
  install_version('proxy', version = '0.4-20'); \
  install_version('robustbase', version = '0.93-7'); \
" 2>&1 | tee R.install.2.log
checkRInstallLog R.install.2.log
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); \
  install.packages(c( \
    'dplyr', 'R.utils', 'AUC', 'mlbench', 'flexclust', 'randomForest', \
    'bit64', 'HDtweedie', 'jsonlite', 'statmod', 'roxygen2', 'testthat', 'Rcpp', 'fpc', 'RUnit', \
    'ade4', 'e1071', 'ggplot2', 'LiblineaR', 'optparse', 'uuid', 'usethis', 'plot3Drgl',  \
    'IRdisplay', 'plotly' \
  )) \
" 2>&1 | tee R.install.3.log
checkRInstallLog R.install.3.log
# Latest XGBoost (from source) does not compile; see https://github.com/h2oai/h2o-3/issues/7830
#/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); \
#  install.packages(c('xgboost'), type='source') \
#" 2>&1 | tee R.install.2.log
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); library(devtools); \
  install_version('xgboost', version = '1.0.0.2', build = TRUE); \
" 2>&1 | tee R.install.4.log
checkRInstallLog R.install.4.log
# RCUrl 1.95-4.12 is the last to support R 3.3
# survival 2.44-1.1 is the last to support R 3.3
# slam 0.1-40 is the last to support R 3.3
# latticeExtra (dependency of Hmisc) 0.6-28 is the last to support R 3.3
# caTools (dependency of ROCR) requires R 3.6.0 in latest version
# text2vec requires R 3.6.0 in latest version
# mvtnorm (dependency of coin)
# coin (dependency of uplift, 1.0 is the last to support R 3.3)
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); library(devtools); \
  install_version('RCurl', version = '1.95-4.12'); \
  install_version('survival', version = '2.44-1.1'); \
  install_version('slam', version = '0.1-40'); \
  install_version('latticeExtra', version = '0.6-28'); \
  install_version('caTools', version = '1.17.1.4'); \
  install_version('text2vec', version = '0.5.0'); \
  install_version('mvtnorm', version = '1.0'); \
  install_version('coin', version = '1.0'); \
" 2>&1 | tee R.install.5.log
checkRInstallLog R.install.5.log
# install packages that need special deps installed above
# ROCR 1.0-7 is the last to support R 3.5 and below
# Hmisc 4.3-0 is the last to support survival 2.44
# uplift 0.3.5 requires coin installed above
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); library(devtools); \
  install_version('ROCR', version = '1.0-7'); \
  install_version('Hmisc', version = '4.3-0'); \
  install_version('uplift', version = '0.3.5'); \
" 2>&1 | tee R.install.6.log
checkRInstallLog R.install.6.log

# dependecies from GitHub
# The R_REMOTES_UPGRADE=never disables automatic upgrade of dependencies.
# mainly because of systemfonts that is not supported in newer versions by R 3.3
# is also a dependency of pkgdown which would try otherwise to upgrade it to a version
# which doesn't support R < 3.6
R_REMOTES_UPGRADE=never
/usr/local/R/current/bin/R -e "chooseCRANmirror(graphics=FALSE, ind=1); library(devtools); \
  install_version('systemfonts', version = '0.2.3'); \
  install_version('glmnet', version = '2.0-2'); \
  install_version('gbm', version = '2.1.3'); \
  install_version('MLmetrics', version = '1.0.0'); \
  install_version('pkgdown', version = '1.3.0'); \
  install_github('Zelazny7/isofor') \
" 2>&1 | tee R.install.7.log
checkRInstallLog R.install.7.log
rm R.install.*.log
# install LiblineaR from S3
wget -q -O /LiblineaR_1.94-2.tar.gz https://cran.r-project.org/src/contrib/Archive/LiblineaR/LiblineaR_1.94-2.tar.gz
/usr/local/R/current/bin/R CMD INSTALL /LiblineaR_1.94-2.tar.gz
rm /LiblineaR_1.94-2.tar.gz
